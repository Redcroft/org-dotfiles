#+TITLE: Pipewire Configuration
#+AUTHOR: Richard Redcroft
#+EMAIL: Richard@Redcroft.tech
#+OPTIONS: toc:nil num:nil
#+PROPERTY: Header-args :tangle-mode (identity #o444) :mkdirp yes
#+auto_tangle: t

#+begin_src bash :tangle no :results none
  systemctl --user enable --now filter-chain
  systemctl --user restart pipewire pipewire-pulse
#+end_src

#+begin_src bash :tangle no :results none
  systemctl --user restart filter-chain
#+end_src


* Network Server

#+begin_src conf :tangle (if (not (string= system-name "red")) "~/.config/pipewire/pipewire.conf.d/50-network.conf" "")
  context.exec = [
    { path = "pactl" args = "load-module module-native-protocol-tcp listen=0.0.0.0 port=4714 auth-anonymous=1" }
  ]
#+end_src

* Spatial Audio
I want to keep hrtf files within the dotfile repo, so use emacs to determine where the file exists on disk then use that inside the pipewire config file.

#+NAME: wav-file
#+begin_src emacs-lisp :cache yes
  (expand-file-name "hrtf.wav" default-directory)
#+end_src

#+RESULTS[7459ae3ebbf5e99f36fd5327ab1b6f6404497933]: wav-file
: /home/lambda/.repos/org-dotfiles/pipewire/wav/dh+.wav

#+NAME: sofa-file
#+begin_src emacs-lisp :cache yes
  (expand-file-name "hrtf.sofa" default-directory)
#+end_src

#+RESULTS[45888b9b74b1a4af0da39f4d2d5c00143e00e953]: sofa-file
: /home/lambda/.repos/org-dotfiles/pipewire/sofa/H5_48K_24bit_256tap_FIR_SOFA.sofa


#+begin_src conf :tangle "~/.config/pipewire/pipewire.conf.d/99-spatial-hrir.conf" :noweb yes
  context.modules = [
       { name = libpipewire-module-filter-chain
           args = {
               node.description = "Virtual Surround (HRIR WAV)"
               media.name       = "Virtual Surround (HRIR WAV)"
               filter.graph = {
                   nodes = [
                       # duplicate inputs
                       { type = builtin label = copy name = copyFL  }
                       { type = builtin label = copy name = copyFR  }
                       { type = builtin label = copy name = copyFC  }
                       { type = builtin label = copy name = copyRL  }
                       { type = builtin label = copy name = copyRR  }
                       { type = builtin label = copy name = copySL  }
                       { type = builtin label = copy name = copySR  }
                       { type = builtin label = copy name = copyLFE }

                       # apply hrtf - HeSuVi 14-channel WAV
                       { type = builtin label = convolver name = convFL_L config = { filename = "<<wav-file()>>" channel =  0 } }
                       { type = builtin label = convolver name = convFL_R config = { filename = "<<wav-file()>>" channel =  1 } }
                       { type = builtin label = convolver name = convSL_L config = { filename = "<<wav-file()>>" channel =  2 } }
                       { type = builtin label = convolver name = convSL_R config = { filename = "<<wav-file()>>" channel =  3 } }
                       { type = builtin label = convolver name = convRL_L config = { filename = "<<wav-file()>>" channel =  4 } }
                       { type = builtin label = convolver name = convRL_R config = { filename = "<<wav-file()>>" channel =  5 } }
                       { type = builtin label = convolver name = convFC_L config = { filename = "<<wav-file()>>" channel =  6 } }
                       { type = builtin label = convolver name = convFR_R config = { filename = "<<wav-file()>>" channel =  7 } }
                       { type = builtin label = convolver name = convFR_L config = { filename = "<<wav-file()>>" channel =  8 } }
                       { type = builtin label = convolver name = convSR_R config = { filename = "<<wav-file()>>" channel =  9 } }
                       { type = builtin label = convolver name = convSR_L config = { filename = "<<wav-file()>>" channel = 10 } }
                       { type = builtin label = convolver name = convRR_R config = { filename = "<<wav-file()>>" channel = 11 } }
                       { type = builtin label = convolver name = convRR_L config = { filename = "<<wav-file()>>" channel = 12 } }
                       { type = builtin label = convolver name = convFC_R config = { filename = "<<wav-file()>>" channel = 13 } }

                       # treat LFE as FC
                       { type = builtin label = convolver name = convLFE_L config = { filename = "<<wav-file()>>" channel =  6 } }
                       { type = builtin label = convolver name = convLFE_R config = { filename = "<<wav-file()>>" channel = 13 } }

                       # stereo output
                       { type = builtin label = mixer name = mixL }
                       { type = builtin label = mixer name = mixR }
                   ]
                   links = [
                       # input to convolver
                       { output = "copyFL:Out"  input="convFL_L:In"  }
                       { output = "copyFL:Out"  input="convFL_R:In"  }
                       { output = "copySL:Out"  input="convSL_L:In"  }
                       { output = "copySL:Out"  input="convSL_R:In"  }
                       { output = "copyRL:Out"  input="convRL_L:In"  }
                       { output = "copyRL:Out"  input="convRL_R:In"  }
                       { output = "copyFC:Out"  input="convFC_L:In"  }
                       { output = "copyFR:Out"  input="convFR_R:In"  }
                       { output = "copyFR:Out"  input="convFR_L:In"  }
                       { output = "copySR:Out"  input="convSR_R:In"  }
                       { output = "copySR:Out"  input="convSR_L:In"  }
                       { output = "copyRR:Out"  input="convRR_R:In"  }
                       { output = "copyRR:Out"  input="convRR_L:In"  }
                       { output = "copyFC:Out"  input="convFC_R:In"  }
                       { output = "copyLFE:Out" input="convLFE_L:In" }
                       { output = "copyLFE:Out" input="convLFE_R:In" }

                       # mix processed signal into stereo input
                       { output = "convFL_L:Out"  input="mixL:In 1" }
                       { output = "convFL_R:Out"  input="mixR:In 1" }
                       { output = "convSL_L:Out"  input="mixL:In 2" }
                       { output = "convSL_R:Out"  input="mixR:In 2" }
                       { output = "convRL_L:Out"  input="mixL:In 3" }
                       { output = "convRL_R:Out"  input="mixR:In 3" }
                       { output = "convFC_L:Out"  input="mixL:In 4" }
                       { output = "convFC_R:Out"  input="mixR:In 4" }
                       { output = "convFR_R:Out"  input="mixR:In 5" }
                       { output = "convFR_L:Out"  input="mixL:In 5" }
                       { output = "convSR_R:Out"  input="mixR:In 6" }
                       { output = "convSR_L:Out"  input="mixL:In 6" }
                       { output = "convRR_R:Out"  input="mixR:In 7" }
                       { output = "convRR_L:Out"  input="mixL:In 7" }
                       { output = "convLFE_R:Out" input="mixR:In 8" }
                       { output = "convLFE_L:Out" input="mixL:In 8" }
                   ]
                   inputs  = [ "copyFL:In" "copyFR:In" "copyFC:In" "copyLFE:In" "copyRL:In" "copyRR:In", "copySL:In", "copySR:In" ]
                   outputs = [ "mixL:Out" "mixR:Out" ]
               }
               capture.props = {
                   node.name      = "effect_input.virtual-surround-7.1-hesuvi"
                   media.class    = Audio/Sink
                   audio.channels = 8
                   audio.position = [ FL FR FC LFE RL RR SL SR ]
               }
               playback.props = {
                   node.name      = "effect_output.virtual-surround-7.1-hesuvi"
                   node.passive   = true
                   audio.channels = 2
                   audio.position = [ FL FR ]
  		 node.target = "alsa_output.usb-Sennheiser_GSX_1000_Main_Audio_5698800377011146-00.analog-output-surround71"
               }
           }
       }
   ]
#+end_src

#+begin_src conf :tangle "~/.config/pipewire/filter-chain.conf.d/spatializer.conf" :noweb yes
  context.modules = [
      { name = libpipewire-module-filter-chain
          args = {
              node.description = "Virtual Surround (HRIR SOFA)"
              media.name       = "Virtual Surround (HRIR SOFA)"
              filter.graph = {
                  nodes = [
                      {
                          type = sofa
                          label = spatializer
                          name = spFL
                          config = {
                              filename = "<<sofa-file()>>" 
                          }
                          control = {
                              "Azimuth"    = 30.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spFR
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 330.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spFC
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 0.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spRL
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 150.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spRR
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 210.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spSL
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 90.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spSR
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 270.0
                              "Elevation"  = 0.0
                              "Radius"     = 3.0
                          }
                      }
                      {
                          type = sofa
                          label = spatializer
                          name = spLFE
                          config = {
  			    filename = "<<sofa-file()>>"
                          }
                          control = {
                              "Azimuth"    = 0.0
                              "Elevation"  = -60.0
                              "Radius"     = 6.0
                          }
                      }

                      # stereo output
                      { type = builtin label = mixer name = mixL }
                      { type = builtin label = mixer name = mixR }
                  ]
                  links = [
                      # output
                      { output = "spFL:Out L"  input="mixL:In 1" }
                      { output = "spFL:Out R"  input="mixR:In 1" }
                      { output = "spFR:Out L"  input="mixL:In 2" }
                      { output = "spFR:Out R"  input="mixR:In 2" }
                      { output = "spFC:Out L"  input="mixL:In 3" }
                      { output = "spFC:Out R"  input="mixR:In 3" }
                      { output = "spRL:Out L"  input="mixL:In 4" }
                      { output = "spRL:Out R"  input="mixR:In 4" }
                      { output = "spRR:Out L"  input="mixL:In 5" }
                      { output = "spRR:Out R"  input="mixR:In 5" }
                      { output = "spSL:Out L"  input="mixL:In 6" }
                      { output = "spSL:Out R"  input="mixR:In 6" }
                      { output = "spSR:Out L"  input="mixL:In 7" }
                      { output = "spSR:Out R"  input="mixR:In 7" }
                      { output = "spLFE:Out L" input="mixL:In 8" }
                      { output = "spLFE:Out R" input="mixR:In 8" }
                  ]
                  inputs  = [ "spFL:In" "spFR:In" "spFC:In" "spLFE:In" "spRL:In" "spRR:In", "spSL:In", "spSR:In" ]
                  outputs = [ "mixL:Out" "mixR:Out" ]
              }
              capture.props = {
                  node.name      = "effect_input.spatializer"
                  media.class    = Audio/Sink
                  audio.channels = 8
                  audio.position = [ FL FR FC LFE RL RR SL SR ]
              }
              playback.props = {
                  node.name      = "effect_output.spatializer"
                  node.passive   = true
  		node.target    = "alsa_output.usb-Sennheiser_GSX_1000_Main_Audio_5698800377011146-00.analog-output-surround71"
                  audio.channels = 2
                  audio.position = [ FL FR ]
              }
          }
      }
  ]
#+end_src

#+begin_src systemd :tangle "~/.config/systemd/user/filter-chain.service.d/override.conf"
  [Unit]
  Description=PipeWire filter chain daemon

  After=pipewire.service pipewire-session-manager.service
  BindsTo=pipewire.service

  [Service]
  LockPersonality=yes
  MemoryDenyWriteExecute=yes
  NoNewPrivileges=yes
  RestrictNamespaces=yes
  SystemCallArchitectures=native
  SystemCallFilter=@system-service
  Type=simple
  ExecStart=
  ExecStart=pipewire -c filter-chain.conf
  Restart=on-failure
  Slice=session.slice

  [Install]
  Also=pipewire.socket
  WantedBy=default.target
#+end_src


* GSX Fix
#+begin_src conf :tangle "/sudo::/etc/udev/hwdb.d/gsx.hwdb"
  evdev:input:b0003v1395p00a0*
    KEYBOARD_KEY_C00EA=reserved
#+end_src
